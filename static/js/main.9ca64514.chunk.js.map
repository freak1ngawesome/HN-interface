{"version":3,"sources":["slices/apiSlice.js","services/setTime.js","components/item/item.js","components/preloader/preloader.js","components/pages/main/main.js","components/comment/comment.js","components/comment/rootComment.js","components/pages/info/info.js","services/getCurrentTime.js","components/header/header.js","components/footer/footer.js","components/app/app.js","store.js","index.js"],"names":["newsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","keepUnusedDataFor","endpoints","builder","getLastNewsIds","query","providesTags","getNewsDataById","id","useGetLastNewsIdsQuery","useGetNewsDataByIdQuery","setTime","time","Date","toLocaleString","Item","isFetching","refetchOnReconnect","refetchOnMountOrArgChange","data","isLoading","refetch","isError","height","p","shadow","borderWidth","spacing","size","to","pathname","state","newsId","title","Star","score","Calendar","AtSign","by","Chat","descendants","memo","Preloader","color","Main","useState","itemsCount","setItemsCount","handleScroll","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","count","useEffect","document","addEventListener","removeEventListener","mb","aria-label","icon","Repeat","onClick","slice","map","Comment","htmlToReactParser","Parser","bg","parse","text","kids","commentId","RootComment","isOpen","setIsOpen","as","Info","useParams","history","useHistory","gridGap","ArrowBack","goBack","url","href","isExternal","getCurrentTime","date","h","getHours","m","getMinutes","s","getSeconds","Header","currentTime","setCurrentTime","timer","setInterval","clearInterval","Footer","App","maxW","d","flexDirection","minH","flex","path","component","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","setupListeners","dispatch","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9ca64514.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst baseURL = 'https://hacker-news.firebaseio.com/v0/'\r\n\r\nexport const newsApi = createApi({\r\n  reducerPath: 'newsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: baseURL }),\r\n  tagTypes: ['lastNews', 'newsById'],\r\n  keepUnusedDataFor: 120,\r\n  endpoints: (builder) => ({\r\n    getLastNewsIds: builder.query({\r\n      query: () => 'newstories.json?print=pretty&orderBy=\"$key\"&limitToFirst=100',\r\n      providesTags: ['lastNews'],\r\n    }),\r\n    getNewsDataById: builder.query({\r\n      query: (id) => `item/${id}.json?print=pretty`,\r\n      providesTags: ['newsById'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useGetLastNewsIdsQuery, useGetNewsDataByIdQuery } = newsApi","export function setTime(time){\r\n  let date = new Date(time * 1000)\r\n  return date.toLocaleString()\r\n}","import React, { memo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ListItem, Heading, Box, Text, HStack, Center, Skeleton } from '@chakra-ui/react'\r\nimport { ChatIcon, StarIcon, CalendarIcon, AtSignIcon } from '@chakra-ui/icons'\r\nimport { useGetNewsDataByIdQuery } from '../../slices/apiSlice'\r\nimport { setTime } from '../../services/setTime.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Item({id, isFetching}){\r\n  const { data, isLoading, refetch, isError } = useGetNewsDataByIdQuery(id, {\r\n    refetchOnReconnect: true,\r\n    refetchOnMountOrArgChange: true,\r\n  })\r\n  if (isFetching) {refetch()}\r\n  if (isLoading) return <Skeleton height='90px'/>\r\n  if (isError) return <Center height='90px'>Ошибка загрузки</Center>\r\n  \r\n  return data && (\r\n    <ListItem p={5} shadow='md' borderWidth='1px' spacing='5px'>\r\n        <Box>\r\n          <Heading size='md'>\r\n            <Link to={{pathname: `/news/${id}`, state: {newsId: id}}}>\r\n              {data.title}\r\n            </Link>\r\n          </Heading>\r\n        </Box>\r\n        <HStack>\r\n          <StarIcon/>\r\n          <Text>{data.score}</Text>\r\n          <CalendarIcon/>\r\n          <Text>{setTime(data.time)}</Text>\r\n          <AtSignIcon/>\r\n          <Text>{data.by}</Text>\r\n          <ChatIcon/>\r\n          <Text>{data.descendants}</Text>\r\n        </HStack>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default memo(Item)","import React from 'react'\r\nimport { Spinner, Center } from '@chakra-ui/react'\r\n\r\nfunction Preloader() {\r\n  return (\r\n    <Center color='red.500' size='xl'>\r\n      <Spinner/>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default Preloader","import React, {useState, useEffect} from 'react'\r\nimport Item from '../../item/item.js'\r\nimport Preloader from '../../preloader/preloader'\r\nimport { List, Box, IconButton, Center } from '@chakra-ui/react'\r\nimport { RepeatIcon } from '@chakra-ui/icons'\r\nimport { useGetLastNewsIdsQuery } from '../../../slices/apiSlice'\r\n\r\nfunction Main(){\r\n  const {data, isLoading, isFetching, isError, refetch} = useGetLastNewsIdsQuery()\r\n\r\n  const [itemsCount, setItemsCount] = useState(10)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', handleScroll)\r\n    return () => document.removeEventListener('scroll', handleScroll)\r\n  }, [])\r\n\r\n  function handleScroll(e) {\r\n    if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n      setItemsCount(count => count + 10 > 100 ? 100 : count + 10)\r\n    }\r\n  }\r\n  const handleRefreshButton = function() {\r\n    refetch()\r\n  }\r\n  if (isError) return <Center height='100px'>Ошибка</Center>\r\n  if (isLoading) return <Preloader/>\r\n\r\n  return (\r\n    <>\r\n      <Box p={5} shadow='md' borderWidth='1px' mb='20px'>\r\n        <IconButton aria-label='Refresh' icon={<RepeatIcon />} onClick={handleRefreshButton}/>\r\n      </Box>\r\n      <List spacing='5px'>\r\n        {data.slice(0, itemsCount).map(id => <Item key={id} id={id} isFetching={isFetching}/>)}\r\n      </List>\r\n    </>\r\n  ) \r\n}\r\n\r\nexport default Main","import React, { memo } from 'react'\r\nimport { Skeleton, ListItem, Heading, Text, List } from '@chakra-ui/react'\r\nimport {Parser} from 'html-to-react'\r\nimport { useGetNewsDataByIdQuery } from '../../slices/apiSlice'\r\nimport { setTime } from '../../services/setTime.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Comment({id, isFetching}){\r\n  const {data, isLoading, refetch} = useGetNewsDataByIdQuery(id)\r\n  if (isFetching) {refetch()}\r\n  if (isLoading) return <Skeleton height='30px'/>\r\n  const htmlToReactParser = new Parser()\r\n  return data && (\r\n    <ListItem p={5} shadow='md' borderWidth='1px' bg='gray.200'>\r\n      <Heading size='sm'>{data.by} : {setTime(data.time)}</Heading>\r\n      <Text size='sm'>{htmlToReactParser.parse(data.text)}</Text>\r\n      {data.kids && \r\n        <List>\r\n          {data.kids.map(commentId => <Comment key={commentId} id={commentId} isFetching={isFetching}/>)}\r\n        </List>}\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nComment.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  isFetching: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default memo(Comment)","import React, { useState } from 'react'\r\nimport Comment from './comment'\r\nimport { Skeleton, ListItem, Heading, Text, Link, List } from '@chakra-ui/react'\r\nimport {Parser} from 'html-to-react'\r\nimport { useGetNewsDataByIdQuery } from '../../slices/apiSlice'\r\nimport { setTime } from '../../services/setTime.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RootComment({id, isFetching}) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { data, isLoading, refetch } = useGetNewsDataByIdQuery(id)\r\n  if (isFetching) {refetch()}\r\n  const handleClick = function() {\r\n    setIsOpen(!isOpen)\r\n  }\r\n  const htmlToReactParser = new Parser()\r\n  if (isLoading) return <Skeleton height='60px'/>\r\n  return data && (\r\n    <ListItem p={5} shadow='md' borderWidth='1px'>\r\n      <Heading size='sm'>{data.by} : {setTime(data.time)}</Heading>\r\n      <Text as='div' size='sm'>{htmlToReactParser.parse(data.text)}</Text>\r\n      {data.kids && <Link onClick={handleClick}>{isOpen ? 'Свернуть комментарии' : 'Показать комментарии'}</Link>}\r\n      {isOpen && \r\n        <List>\r\n          {data.kids.map(commentId => <Comment key={commentId} id={commentId} isFetching={isFetching}/>)}\r\n        </List>}\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nRootComment.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  isFetching: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default RootComment","import React, { memo } from 'react'\r\nimport RootComment from '../../comment/rootComment'\r\nimport Preloader from '../../preloader/preloader'\r\nimport { useGetNewsDataByIdQuery, useGetLastNewsIdsQuery } from '../../../slices/apiSlice'\r\nimport { Box, Heading, Flex, Spacer, HStack, Text, Link, List, IconButton } from '@chakra-ui/react'\r\nimport { ArrowBackIcon, RepeatIcon } from '@chakra-ui/icons'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { setTime } from '../../../services/setTime.js'\r\n\r\nfunction Info(){\r\n  let { id } = useParams()\r\n\r\n  const { data, isLoading, isFetching, refetch } = useGetNewsDataByIdQuery(id)\r\n  const {isFetching: everyMinuteFetching} = useGetLastNewsIdsQuery()\r\n  if (everyMinuteFetching) {refetch()}\r\n\r\n  const history = useHistory()\r\n  const handleGoBackButton = function() {\r\n    history.goBack()\r\n  }\r\n  const handleRefreshButton = function() {\r\n    refetch()\r\n  }\r\n  if (isLoading) return <Preloader/>\r\n  return (\r\n    <Box>\r\n      <Flex p={5} shadow='md' borderWidth='1px' mb='20px' gridGap='5px'>\r\n        <Heading size='lg'>{data.title}</Heading>\r\n        <Spacer/>\r\n        <HStack>\r\n          <IconButton aria-label='Go back' icon={<ArrowBackIcon />} onClick={handleGoBackButton}/>\r\n          <IconButton aria-label='Refresh' icon={<RepeatIcon />} onClick={handleRefreshButton}/>\r\n        </HStack>\r\n      </Flex>\r\n      <Box p={5} shadow='md' borderWidth='1px' spacing='5px'>\r\n        <Text>Рейтинг: {data.score}</Text>\r\n        <Text>Дата и время создания: {setTime(data.time)}</Text>\r\n        <Text>Автор: {data.by}</Text>\r\n        <Text>Комментарии: {data.descendants}</Text>\r\n        {data.url && <Link href={data.url} color='teal.500' isExternal>Ссылка на материал</Link>}\r\n      </Box>\r\n      {data.kids && \r\n        <List>\r\n          {data.kids.map(commentId => <RootComment key={commentId} id={commentId} isFetching={isFetching}/>)}\r\n        </List>}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default memo(Info)","export default function getCurrentTime(){\r\n  const date = new Date()\r\n  let h = date.getHours() < 10 ? '0' + date.getHours() : date.getHours()\r\n  let m = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()\r\n  let s = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()\r\n  return {\r\n    h,\r\n    m,\r\n    s,\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Center, Heading, Text, VStack } from '@chakra-ui/react'\r\nimport { useGetLastNewsIdsQuery } from '../../slices/apiSlice'\r\nimport getCurrentTime from '../../services/getCurrentTime'\r\n\r\nfunction Header () {\r\n  const [currentTime, setCurrentTime] = useState(getCurrentTime())\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(getCurrentTime())\r\n    }, 1000)\r\n    return () => clearInterval(timer)\r\n  },[])\r\n\r\n  let { refetch } = useGetLastNewsIdsQuery()\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [currentTime.m, refetch])\r\n\r\n  return (\r\n    <Center as='header' height='120px' bg='gray.200' mb='20px' p={5} shadow='md' borderWidth='1px'>\r\n      <VStack>\r\n        <Heading size='lg'>Hacker News</Heading>\r\n        <Text>{currentTime.h} : {currentTime.m} : {currentTime.s}</Text>\r\n      </VStack>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default Header","import { Center, Link } from '@chakra-ui/react'\r\n\r\nfunction Footer(){\r\n  return(\r\n    <Center as='footer' height='40px' p={5} bg='gray.200' shadow='md' borderWidth='1px'>\r\n      <Link href='https://github.com/freak1ngawesome' isExternal>@freak1ngawesome</Link>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default Footer","import Main from '../pages/main/main.js'\r\nimport Info from '../pages/info/info.js'\r\nimport Header from '../header/header.js'\r\nimport Footer from '../footer/footer.js'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\nimport { Container, Box } from '@chakra-ui/react'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router> \r\n      <Container maxW='1000px' d='flex' flexDirection='column' minH='100vh'>\r\n        <Header/>\r\n        <Box as='main' flex='1'>\r\n        <Switch>\r\n            <Route path='/news/:id' component={Info} />\r\n            <Route path='/' component={Main} />\r\n        </Switch>\r\n        </Box>\r\n        <Footer/>\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\nimport { newsApi } from './slices/apiSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [newsApi.reducerPath]: newsApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(newsApi.middleware),\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/app/app.js'\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store.js'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}